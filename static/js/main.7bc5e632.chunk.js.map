{"version":3,"sources":["context/BoardProvider.js","graphic/menu/Menu.js","game/Game.js","graphic/board/Digit.js","graphic/board/Controls.js","graphic/board/MineField.js","graphic/board/Board.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["GameContext","React","createContext","setGameDispatch","console","log","defaultGameState","game","height","width","mine","GameReducer","state","action","type","BoardProvider","children","useReducer","dispatchGame","Provider","value","levels","levelData","Menu","useState","index","setIndex","custom","setCustom","MenuStyle","className","map","e","i","onClick","handleClick","onSubmit","preventDefault","target","window","alert","name","max","min","styled","div","Game","this","Array","fill","remaining","length","x","Math","floor","random","field","cell","querySelector","classList","remove","add","querySelectorAll","forEach","losing","revealCell","winning","Digit","digits","toString","split","slice","DigitStyle","d","setMineDispatch","Control","props","setMine","gameState","useContext","time","setTime","timer","useRef","useEffect","current","cancel","fn","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","accurateInterval","ControlStyle","MineField","setGame","flag","newGame","Number","parseInt","replace","parentNode","handleFlag","MineFieldStyle","theme","ref","onContextMenu","Board","BoardStyle","App","Fragment","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7bc5e632.chunk.js","sourcesContent":["import React, { useReducer } from 'react'\r\n\r\nexport const GameContext = React.createContext()\r\nexport let setGameDispatch = () => {console.log('empty function')}\r\n\r\nconst defaultGameState = {\r\n    game: 'new-game',\r\n    height: 9,\r\n    width: 9,\r\n    mine: 10\r\n}\r\n\r\nconst GameReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'new-game':\r\n            return { \r\n                ...state,\r\n                game: 'new-game'\r\n            }\r\n        case 'win':\r\n            return {\r\n                ...state,\r\n                game: 'win' \r\n            }\r\n        case 'lose': \r\n            return {\r\n                ...state,\r\n                game: 'lose'\r\n            }\r\n        case 'change-level':\r\n            return {\r\n                game: 'new-game',\r\n                height: action.height,\r\n                width: action.width,\r\n                mine: action.mine\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default function BoardProvider({ children }) {\r\n    const [game, dispatchGame] = useReducer(GameReducer, defaultGameState)\r\n    setGameDispatch = dispatchGame\r\n\r\n    return (\r\n        <GameContext.Provider value={game}>\r\n                {children}\r\n        </GameContext.Provider>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { setGameDispatch } from '../../context/BoardProvider'\r\n\r\nconst levels = ['EASY', 'MEDIUM', 'HARD']\r\n\r\nconst levelData = [\r\n    {\r\n        height: 9,\r\n        width: 9,\r\n        mine: 10\r\n    },\r\n    {\r\n        height: 16,\r\n        width: 16,\r\n        mine: 40\r\n    },\r\n    {\r\n        height: 30,\r\n        width: 16,\r\n        mine: 76\r\n    }\r\n]\r\n\r\nexport default function Menu() {\r\n    const [index, setIndex] = useState(0)\r\n    const [custom, setCustom] = useState(false)\r\n\r\n    const handleClick = (i) => {\r\n        setIndex(i)\r\n        setCustom(false)\r\n        setGameDispatch({\r\n            type: 'change-level',\r\n            ...levelData[i]\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const height = e.target.height.value\r\n        const width = e.target.width.value\r\n        const mine = e.target.mine.value\r\n        if (!height || !width || !mine) return\r\n        if (mine >= height * width) return window.alert('Too many mines') \r\n        setGameDispatch({\r\n            type: 'change-level',\r\n            height,\r\n            width,\r\n            mine\r\n        })\r\n    }\r\n\r\n    return (\r\n        <MenuStyle>\r\n            <div className=\"inner\">\r\n                <div className=\"options\">\r\n                    {levels.map((e, i) => (\r\n                        <div key={i} onClick={() => handleClick(i)} className={'option' + (index === i? ' active' : '')}>\r\n                            {e}\r\n                        </div>\r\n                    ))}\r\n                    <div className={'option' + (custom? ' active' : '')} onClick={() => {setIndex(4); setCustom(true)}}>CUSTOM</div>\r\n                </div>\r\n                {custom && <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <label>Height: </label><br/>\r\n                        <input type=\"number\" name=\"height\" max=\"50\" min=\"8\"/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Width: </label><br/>\r\n                        <input type=\"number\" name=\"width\" max=\"50\" min=\"8\"/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Mine: </label><br/>\r\n                        <input type=\"number\" name=\"mine\" max=\"1000\" min=\"1\"/>\r\n                    </div>\r\n                    <button>Update</button>\r\n                </form>}\r\n            </div>\r\n        </MenuStyle>\r\n    )\r\n}\r\n\r\nconst MenuStyle = styled.div`\r\n    background-color: #C6C6C6;\r\n    border-width: 2px;\r\n    border-style: solid;\r\n    border-color: #fff #808080 #808080 #fff;\r\n    margin-bottom: 8px;\r\n\r\n    .inner {\r\n        margin: 8px;\r\n        border-width: 2px;\r\n        border-style: solid;\r\n        border-color: #808080 #fff #fff #808080;\r\n        padding: 4px;\r\n    }\r\n\r\n    .options {\r\n        display: flex;\r\n\r\n        .option {\r\n            height: 36px;\r\n            width: 96px;\r\n            line-height: 36px;\r\n            text-align: center;\r\n            color: white;\r\n        }\r\n\r\n        .option.active {\r\n            line-height: 32px;\r\n            border-width: 2px;\r\n            border-style: solid;\r\n            border-color: #fff #808080 #808080 #fff;\r\n        }\r\n    }\r\n\r\n    form {\r\n        display: flex;\r\n        justify-content: space-evenly;\r\n        align-items: flex-end;\r\n        margin-top: 4px;\r\n        border-top: 2px solid #888;\r\n\r\n        input {\r\n            width: 60px;\r\n            outline: none;\r\n        }\r\n\r\n        button {\r\n            height: 24px;\r\n            width: 60px;\r\n            border-width: 2px;\r\n            border-style: solid;\r\n            border-color: #fff #808080 #808080 #fff;\r\n            background-color: transparent;\r\n        }\r\n    }\r\n\r\n    .option.active:active,\r\n    button:active {\r\n        transform: translate(1px, 1px);\r\n    }\r\n`","import { setGameDispatch } from \"../context/BoardProvider\"\r\n\r\nexport default class Game {\r\n    constructor(height, width, mine) {\r\n        this.height = height\r\n        this.width = width\r\n        this.map = new Array(height * width).fill(0)\r\n        this.remaining = this.map.length - mine\r\n        for (let i = 0; i < mine; i++) {\r\n            let x = Math.floor(Math.random() * (this.map.length - 0.01))\r\n            while (this.map[x] === '.') x = Math.floor(Math.random() * (this.map.length - 0.01))\r\n            this.map[x] = '.'\r\n        }\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            if (this.map[i] === '.') continue\r\n            if (i % width) {\r\n                if (this.map[i - 1] === '.') this.map[i]++\r\n                if (this.map[i - width - 1] === '.') this.map[i]++\r\n                if (this.map[i + width - 1] === '.') this.map[i]++\r\n            }\r\n            if (i % width < width - 1) {\r\n                if (this.map[i + 1] === '.') this.map[i]++\r\n                if (this.map[i - width + 1] === '.') this.map[i]++\r\n                if (this.map[i + width + 1] === '.') this.map[i]++\r\n\r\n            }\r\n            if (this.map[i + width] === '.') this.map[i]++\r\n            if (this.map[i - width] === '.') this.map[i]++\r\n        }\r\n    }\r\n\r\n    losing(field) {\r\n        setGameDispatch({type: 'lose'})\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            const cell = field.querySelector('.cell-' + i)\r\n            if (cell.classList[2] !== 'closed') continue\r\n            if (this.map[i] !== '.') {\r\n                if (cell.classList[3] === 'flagged') {\r\n                    cell.classList.remove('flagged')\r\n                    cell.classList.add('mis-flagged')\r\n                }\r\n            }\r\n            else cell.classList.add('mine')\r\n            \r\n        }\r\n    }\r\n\r\n    winning(field) {\r\n        setGameDispatch({type: 'win'})\r\n        for (let i = 0; i < this.map.length; i++) {\r\n            const cell = field.querySelector('.cell-' + i)\r\n            if (cell.classList[2] === 'closed' && cell.classList[3] !== 'flagged') {\r\n                cell.classList.add('flagged')\r\n            }\r\n        }\r\n    }\r\n\r\n    newGame(field) {\r\n        const cells = field.querySelectorAll('.cell')\r\n        cells.forEach((cell, index) => {cell.className = `cell cell-${index} closed`})\r\n    }\r\n\r\n    revealCell(field, index) {\r\n        const cell = field.querySelector('.cell-' + index)\r\n        if (!cell || cell.classList[2] !== 'closed' || cell.classList[3] === 'flagged') return\r\n        cell.classList.remove('closed')\r\n        if (this.map[index] === '.') {\r\n            cell.classList.add('mine-red')\r\n            this.losing(field)\r\n        }\r\n        else {\r\n            this.remaining--\r\n            cell.classList.add('type' + this.map[index])\r\n            if (!this.map[index]) {\r\n                if (index % this.width) {\r\n                    this.revealCell(field, index - 1)\r\n                    this.revealCell(field, index - 1 - this.width)\r\n                    this.revealCell(field, index - 1 + this.width)\r\n                }\r\n                if (index % this.width < this.width - 1) {\r\n                    this.revealCell(field, index + 1)\r\n                    this.revealCell(field, index + 1 - this.width)\r\n                    this.revealCell(field, index + 1 + this.width)\r\n                }\r\n                this.revealCell(field, index - this.width)\r\n                this.revealCell(field, index + this.width)\r\n            }\r\n            if (!this.remaining) this.winning(field)\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport default function Digit({ value, length }) {\r\n    let digits = value.toString().split('')\r\n    while (digits.length < length) digits = ['0', ...digits]\r\n    digits = digits.slice(- length)\r\n\r\n    return (\r\n        <DigitStyle className=\"digits\">\r\n            {digits.map((d, index) => <div key={index} className={'digit digit' + d}></div>)}\r\n        </DigitStyle>\r\n    )\r\n}\r\n\r\nconst DigitStyle = styled.div`\r\n    display: flex;\r\n    gap: 2px;\r\n    background-color: #000;\r\n    border-style: solid;\r\n    border-width: 2px;\r\n    border-color: #808080 #fff #fff #808080;\r\n\r\n    .digit {\r\n        width: 16.5px;\r\n        height: 31.5px;\r\n    }\r\n`\r\n","import React, { useContext, useState, useEffect, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Digit from './Digit'\r\nimport { GameContext } from '../../context/BoardProvider'\r\nimport { setGameDispatch } from '../../context/BoardProvider'\r\n\r\nexport let setMineDispatch = () => {console.log('set mine')}\r\n\r\nconst accurateInterval = function (fn, time) {\r\n    var cancel, nextAt, timeout, wrapper\r\n    nextAt = new Date().getTime() + time\r\n    timeout = null\r\n    wrapper = function () {\r\n        nextAt += time\r\n        timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n        return fn()\r\n    }\r\n    cancel = function () {\r\n        return clearTimeout(timeout)\r\n    }\r\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\r\n    return {\r\n        cancel: cancel\r\n    }\r\n  }\r\n\r\nexport default function Control(props) {\r\n    const [mine, setMine] = useState(props.mine)\r\n    setMineDispatch = setMine\r\n    const gameState = useContext(GameContext)\r\n    const [time, setTime] = useState(0)\r\n    let timer = useRef()\r\n\r\n    useEffect(() => {\r\n        switch (gameState.game) {\r\n            case 'new-game':\r\n                timer.current?.cancel() \r\n                setTime(0)\r\n                timer.current = accurateInterval(() => {setTime(time => time + 1)}, 1000)\r\n                break;\r\n            case 'win':\r\n            case 'lose':       \r\n            default:\r\n                timer.current?.cancel() \r\n                break;\r\n        }\r\n    }, [gameState])\r\n\r\n    return (\r\n        <ControlStyle className=\"control\">\r\n            <div className=\"mine-left\"><Digit value={mine} length={3}/></div>            \r\n            <div onClick={() => setGameDispatch({type: 'new-game'})} className={'face ' + gameState.game}></div>\r\n            <div className=\"timer\"><Digit value={time} length={3}/></div>\r\n        </ControlStyle>\r\n    )\r\n}\r\n\r\nconst ControlStyle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin: 16px;\r\n    padding: 4px;\r\n    border-width: 4px;\r\n    border-style: solid;\r\n    border-color: #808080 #fff #fff #808080;\r\n\r\n    .face {\r\n        height: 40px;\r\n        width: 40px;\r\n    }\r\n\r\n    .face:active {\r\n        transform: translate(1px, 1px);\r\n    }\r\n`","import React, { useState, useContext, useEffect, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Game from '../../game/Game'\r\nimport { GameContext } from '../../context/BoardProvider'\r\nimport { setMineDispatch } from './Controls'\r\n\r\nexport default function MineField() {\r\n    const gameState = useContext(GameContext)\r\n    const [game, setGame] = useState(new Game(gameState.height, gameState.width, gameState.mine))\r\n    const flag = useRef(gameState.mine)\r\n    const field = useRef()\r\n\r\n    useEffect(() => {\r\n        if (gameState.game === 'new-game') {\r\n            setGame(new Game(gameState.height, gameState.width, gameState.mine))\r\n            game.newGame(field.current)\r\n            flag.current = gameState.mine\r\n            setMineDispatch(flag.current)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [gameState])\r\n\r\n    const handleClick = (e) => {\r\n        if (gameState.game !== 'new-game') return\r\n        const index = Number.parseInt(e.target.classList[1].replace('cell-', ''))\r\n        game.revealCell(e.target.parentNode, index)\r\n    }\r\n\r\n    const handleFlag = (e) => {\r\n        e.preventDefault()\r\n        if (gameState.game !== 'new-game') return\r\n        const cell = e.target\r\n        if (cell.classList[2] !== 'closed') return\r\n        if (cell.classList[3] === 'flagged') {\r\n            cell.classList.remove('flagged')\r\n            flag.current++\r\n            setMineDispatch(flag.current)\r\n        }\r\n        else if (flag.current > 0) {\r\n            cell.classList.add('flagged')\r\n            flag.current--\r\n            setMineDispatch(flag.current)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MineFieldStyle theme={{height: gameState.height, width: gameState.width}} className=\"field\" ref={field}>\r\n            {game.map.map((e, index) => {\r\n                return <div className={`cell ${'cell-'+index} closed`} onClick={handleClick} onContextMenu={handleFlag} key={index}></div>\r\n            })}\r\n        </MineFieldStyle>\r\n    )\r\n}\r\n\r\nconst MineFieldStyle = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(${props => props.theme.height}, 24px);\r\n    grid-template-rows: repeat(${props => props.theme.width}, 24px);\r\n    margin: 16px;\r\n    border-width: 4px;\r\n    border-style: solid;\r\n    border-color: #808080 #fff #fff #808080;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport MineField from './MineField'\r\nimport BoardProvider from '../../context/BoardProvider'\r\nimport Control from './Controls'\r\n\r\nexport default function Board() {\r\n    return (\r\n        <BoardStyle className=\"board\">\r\n            <BoardProvider>\r\n                <Control mine={5}/>\r\n                <MineField height={9} width={9} mine={5}/>\r\n            </BoardProvider>\r\n        </BoardStyle>\r\n    )\r\n}\r\n\r\nconst BoardStyle = styled.div`\r\n    margin: auto;\r\n    background-color: #C6C6C6;\r\n    border-width: 4px;\r\n    border-style: solid;\r\n    border-color: #fff #808080 #808080 #fff;\r\n`","import React from 'react'\r\n\r\nimport Menu from './graphic/menu/Menu'\r\nimport Board from './graphic/board/Board'\r\n\r\nexport default function App() {\r\n    return (\r\n        <React.Fragment>\r\n            <Menu/>\r\n            <Board/>\r\n        </React.Fragment>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}